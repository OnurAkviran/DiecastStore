// <auto-generated />
using DiecastStoreWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DiecastStoreWeb.Migrations
{
    [DbContext(typeof(DiecastStoreDbContext))]
    [Migration("20250828125110_SeedCarBrandTable")]
    partial class SeedCarBrandTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DiecastStoreWeb.Models.CarBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CarBrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CarBrands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarBrandName = "Porsche",
                            DisplayOrder = 1
                        },
                        new
                        {
                            Id = 2,
                            CarBrandName = "Mercedes-Benz",
                            DisplayOrder = 2
                        },
                        new
                        {
                            Id = 3,
                            CarBrandName = "Audi",
                            DisplayOrder = 3
                        },
                        new
                        {
                            Id = 4,
                            CarBrandName = "Volkswagen",
                            DisplayOrder = 4
                        },
                        new
                        {
                            Id = 5,
                            CarBrandName = "Opel",
                            DisplayOrder = 5
                        },
                        new
                        {
                            Id = 6,
                            CarBrandName = "BMW",
                            DisplayOrder = 6
                        },
                        new
                        {
                            Id = 7,
                            CarBrandName = "Renault",
                            DisplayOrder = 7
                        },
                        new
                        {
                            Id = 8,
                            CarBrandName = "Peugeot",
                            DisplayOrder = 8
                        },
                        new
                        {
                            Id = 9,
                            CarBrandName = "Citroën",
                            DisplayOrder = 9
                        },
                        new
                        {
                            Id = 10,
                            CarBrandName = "Aston Martin",
                            DisplayOrder = 10
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
